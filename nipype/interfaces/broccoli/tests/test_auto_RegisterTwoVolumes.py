# AUTO-GENERATED by tools/checkspecs.py - DO NOT EDIT
from nipype.testing import assert_equal
from nipype.interfaces.broccoli.preprocess import RegisterTwoVolumes

def test_RegisterTwoVolumes_inputs():
    input_map = dict(args=dict(argstr='%s',
    ),
    device=dict(argstr='-device %d',
    ),
    environ=dict(nohash=True,
    usedefault=True,
    ),
    ignore_exception=dict(nohash=True,
    usedefault=True,
    ),
    in_file=dict(argstr='%s',
    copyfile=False,
    mandatory=True,
    position=0,
    ),
    iterationslinear=dict(argstr='-iterationslinear %d',
    ),
    iterationsnonlinear=dict(argstr='-iterationsnonlinear %d',
    ),
    mask=dict(argstr='-mask %s',
    ),
    maskoriginal=dict(argstr='-maskoriginal %s',
    ),
    output=dict(argstr='-output %s',
    ),
    output_type=dict(),
    platform=dict(argstr='-platform %d',
    ),
    quiet=dict(argstr='-quiet',
    ),
    reference=dict(argstr='%s',
    copyfile=False,
    mandatory=True,
    position=1,
    ),
    saveinterpolated=dict(argstr='-saveinterpolated',
    ),
    sigma=dict(argstr='-sigma %s',
    ),
    terminal_output=dict(nohash=True,
    ),
    verbose=dict(argstr='-verbose',
    ),
    )
    inputs = RegisterTwoVolumes.input_spec()

    for key, metadata in input_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(inputs.traits()[key], metakey), value

def test_RegisterTwoVolumes_outputs():
    output_map = dict(aligned_linear_file=dict(),
    aligned_nonlinear_file=dict(),
    interpolated_file=dict(),
    masked_file=dict(),
    )
    outputs = RegisterTwoVolumes.output_spec()

    for key, metadata in output_map.items():
        for metakey, value in metadata.items():
            yield assert_equal, getattr(outputs.traits()[key], metakey), value

